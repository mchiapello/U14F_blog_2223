---
title: "Basso Canavese Foglizzo - Leini"
author: "Marco Chiapello"
date: "2022-11-12"
categories: ["U14F", "2022-2023", "PGS Foglizzese", "Partita"]
format:
  html:
    toc: false
    theme: journal
    page-layout: article
    number-sections: false
execute: 
  echo: false
  warning: false
  message: false
---

## Informazioni generali
```{r}
#| include: false
library(tidyverse)
library(datavolley)
library(gt)
library(gtExtras)
library(patchwork)
source(paste0(here::here(), "/scripts/999_utils.R"))
# Read data
file <- fs::dir_ls(paste0(here::here(), "/data/002_Partite/2022-11-12_Leini/"), 
                   regexp = "dvw$")
x <- dv_read(file)
noi <- teams(x)[1]
loro <- teams(x)[teams(x) != noi]
```


```{r}
#| results: asis
glue::glue("Il {x$meta$match$date} abbiamo giocato nel {x$meta$match$phase} ({x$meta$match$league}) contro il {loro}.    
         Il risultato finale Ã¨ stato: {x$meta$teams$team[1]} ({x$meta$teams$sets_won[1]}) - {x$meta$teams$team[2]} ({x$meta$teams$sets_won[2]}).")
```


```{r}
timeAP <- plays(x) %>%
  dplyr::filter(!is.na(skill) & !skill %in% c("Timeout", "Technical timeout") & !is.na(video_time)) %>%
  group_by(set_number, point_id) %>%
    mutate(start_rally_time=min(video_time),
         stop_rally_time=max(video_time)) %>% 
    select(set_number, point_id, start_rally_time, stop_rally_time) %>% 
    distinct() %>% 
    ungroup %>% 
    mutate(length_rally = stop_rally_time - start_rally_time,
           length_break =  lead(start_rally_time) - stop_rally_time) %>% 
    group_by(set_number) %>%
  dplyr::summarize(avg_rally_time = mean(length_rally, na.rm = TRUE),
                   avg_break_time = mean(length_break, na.rm = TRUE)) %>% 
    rename(Set = set_number, Azione = avg_rally_time, Pausa = avg_break_time)
x$meta$result %>%
    mutate(Set = row_number()) %>%
    select(Set, duration, score_intermediate1:score_intermediate3, score) %>% 
    left_join(timeAP) %>% 
    bind_rows(tibble(Set = NA,
                     duration = sum(x$meta$result$duration),
                     score_intermediate1 = NA,
                     score_intermediate2 = NA,
                     score_intermediate3 = NA,
                     score = x$meta$result %>%
                         select(score) %>% 
                         separate(score, into = c("a", "b"), sep = "-") %>%
                         summarise(a = sum(as.numeric(a), na.rm = TRUE),
                                   b = sum(as.numeric(b), na.rm = TRUE)) %>% 
                         unite("score", a:b, sep = "-") %>% 
                         pull(score),
                     Azione = mean(timeAP$Azione),
                     Pausa = mean(timeAP$Pausa))) %>% 
    mutate(across(starts_with("score_"), ~replace_na(.x, "-"))) %>% 
    mutate(Set = as.character(Set)) %>% 
    replace_na(list(Set = "Totale"))%>% 
    unite("Parziali", score_intermediate1:score_intermediate3, sep = " / ") %>% 
    select(Set, "Durata (min)" = duration, Parziali, Punteggio = score,
           "Azione (sec)" = Azione, "Pausa (sec)" = Pausa) %>% 
    mutate(`Pausa (sec)` = round(`Pausa (sec)`, 1),
           `Azione (sec)` = round(`Azione (sec)`, 1)) %>% 
    gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```

## Progressione punteggio 
```{r}
#| fig-width: 100
#| fig-asp: 0.1
home_colour <- "black"
visiting_colour <- "grey"
font_size <- 20
 sc <- datavolley::plays(x) %>% 
    group_by(.data$point_id) %>% 
    dplyr::slice_tail(n = 1) %>% 
    ungroup %>%
    dplyr::select("set_number", "home_team", "home_team_score", "visiting_team", "visiting_team_score") %>% 
    distinct %>% 
    na.omit() %>%
    mutate(ok = lead(.data$home_team_score) != .data$home_team_score | lead(.data$visiting_team_score) != .data$visiting_team_score)
    sc$ok[nrow(sc)] <- TRUE
    sc <- sc %>% 
        dplyr::filter(.data$ok) %>% 
        mutate(pid = dplyr::row_number(), 
               diff = .data$home_team_score - .data$visiting_team_score, 
               teamcolor = case_when(.data$diff < 0 ~ visiting_colour, 
                                     TRUE ~ home_colour)) %>% 
        dplyr::select(-"ok")
    if (nrow(sc) < 2) return(NULL)
    setx <- c(0, sc$pid[which(diff(sc$set_number) > 0)]) + 0.5
    sc <- mutate(sc, set_number = paste0("Set ", .data$set_number))
    yr <- c(min(-4, min(sc$diff, na.rm = TRUE)), max(4, max(sc$diff, na.rm = TRUE))) ## y-range, at least -4 to +4
    ggplot(sc, aes_string("pid", "diff")) + 
        ggplot2::theme_minimal(base_size = font_size) +
        ggplot2::geom_vline(xintercept = setx, col = "black", alpha = 0.5, size = 1) +
        ggplot2::geom_hline(yintercept = 0, col = "black", alpha = 0.5, size = 1) +
        ggplot2::geom_col(aes_string(fill = "teamcolor"), width = 1.0, col = NA) +
        ggplot2::theme(strip.background = ggplot2::element_rect(fill = "white"), axis.text.x = ggplot2::element_text(hjust = 0)) +
        ggplot2::scale_fill_manual(values = c(home_colour, visiting_colour), guide = "none") +
        ggplot2::labs(x = NULL, y = "Score\ndifference") +
        ggplot2::annotate(geom = "text", label = datavolley::home_team(x), x = 1, y = diff(yr) * 0.9 + yr[1], hjust = 0, size = font_size, fontface = "bold") +
        ggplot2::annotate(geom = "text", label = datavolley::visiting_team(x), x = 1, y = diff(yr) * 0.1 + yr[1], hjust = 0, size = font_size, fontface = "bold") +
        ggplot2::scale_x_continuous(labels = paste0("Set ", seq_along(setx)), breaks = setx, minor_breaks = NULL, expand = c(0.005, 0.005)) +
        ggplot2::scale_y_continuous(breaks = function(z) c(rev(seq(0, yr[1], by = -4)), seq(0, yr[2], by = 4)[-1]), limits = yr, labels = abs) + 
        theme(plot.margin = unit(c(0, 0, 0, 0), "cm"),
              axis.text = element_text(size = font_size * 2)) 


```


## Punti/Errori

```{r}
#| results: asis
pointsN <- vr_points(x, by = "set", team_select = noi) %>% 
    bind_cols(vr_serve(x, by = "set", team_select = noi) %>% select(-set_number)) %>% 
    bind_cols(vr_reception(x, by = "set", team_select = noi) %>% select(-set_number)) %>% 
    bind_cols(vr_attack(x, by = "set", team_select = noi) %>% select(-set_number)) %>% 
    bind_cols(vr_freeball(x, by = "set", team_select = noi) %>% select(-set_number)) %>% 
    bind_cols(vr_block(x, by = "set", team_select = noi) %>% select(-set_number))
pointsL <- vr_points(x, by = "set", team_select = loro) %>% 
    bind_cols(vr_serve(x, by = "set", team_select = loro) %>% select(-set_number)) %>% 
    bind_cols(vr_reception(x, by = "set", team_select = loro) %>% select(-set_number)) %>% 
    bind_cols(vr_attack(x, by = "set", team_select = loro) %>% select(-set_number)) %>% 
    bind_cols(vr_freeball(x, by = "set", team_select = loro) %>% select(-set_number)) %>% 
    bind_cols(vr_block(x, by = "set", team_select = loro) %>% select(-set_number))
glue::glue(
    "In totale abbiamo fatto {sum(pointsN$Tot...2)} punti e {sum(pointsL$Op.Er)} errori. Mentre l'altra squadra ha fatto {sum(pointsL$Tot...2)} punti e {sum(pointsN$Op.Er)} errori."
)

```


```{r}
tibble(Set = pointsN$set_number, 
       `Punti nostri` = pointsN$Tot...2,
       `Errori nostri` = pointsL$Op.Er,
       `Differenza nostra` = `Punti nostri` - `Errori nostri`,
       `Punti loro` = pointsL$Tot...2,
       `Errori loro` = pointsN$Op.Er,
       `Differenza loro` = `Punti loro` - `Errori loro`) %>% 
    gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```





```{r}
#| results: asis
vr_content_team_each <- function(x, which_team = noi) {
    if(which_team == noi){
        home <- teams(x)[teams(x) == noi]
        away <- teams(x)[teams(x) != noi]
    } else {
        home <- teams(x)[teams(x) != noi]
        away <- teams(x)[teams(x) == noi]
    }
    y <- plays(x)
    rthis <- y %>%
        dplyr::summarize(Ricezioni = sum(.data$skill == "Reception" & .data$team == home, na.rm = TRUE),
                         'Punti guadagnati in Cambio Palla' = sum(.data$serving_team == away & .data$skill %in% c("Attack", "Block") & .data$evaluation_code == "#" & .data$team == home, na.rm = TRUE)) %>%
        pivot_longer(cols = 1:2)
    sthis <- y %>% 
        dplyr::filter(.data$team == home) %>%
        dplyr::summarize(Battute = sum(.data$skill == "Serve", na.rm = TRUE),
                         'Punti guadagnati in Break Point' = sum(.data$serving_team == home  & .data$skill %in% c("Serve", "Attack", "Block") & .data$evaluation_code == "#", na.rm = TRUE)) %>%
        pivot_longer(cols = 1:2)
   rthis %>% 
       bind_rows(sthis) %>% 
       bind_rows(tibble(name = c(paste0("1 Punto ogni ", round(rthis$value[1]/rthis$value[2], 2), 
                                        " ricezioni"),
                                 paste0("1 Punto ogni ", round(sthis$value[1]/sthis$value[2], 2), 
                                        " battute")),
                        value = NA))
          
}
noi1 <- vr_content_team_each(x, which_team = noi)
loro1 <- vr_content_team_each(x, which_team = loro)
glue::glue(
    "Riusciamo a fare {noi1$name[5]}, mentre gli avversari fanno {loro1$name[5]}.    
    Riusciamo a fare {noi1$name[6]}, mentre gli avversari fanno {loro1$name[6]}."
)
```


### Attacco

```{r}
#| results: asis
aN <- vr_attack(x, by = "set", team_select = noi)
glue::glue("Su un totale di {sum(pointsN$Tot...17) + sum(pointsN$Tot...22)} palle mandate nell'altro campo {sum(pointsN$Tot...17)} sono stati attacchi ({round(sum(pointsN$Tot...17) / (sum(pointsN$Tot...17) + sum(pointsN$Tot...22)) *100,1)}%) e ci hanno permesso di fate {sum(aN$Pts)} punti, quindi ci servono {round(sum(aN$Tot) / sum(aN$Pts), 1)} attacchi per riuscire a fare un punto. Commettiamo un errore ogni {round(sum(aN$Tot) / sum(aN$Err), 1)} attacchi.")
```


```{r}
t8 <- vr_attack(x, by = "set", team_select = noi)
t10 <- vr_freeball(x, by = "set", team_select = noi)

t8 %>% 
    gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```

```{r}
#| fig-width: 10
#| fig-asp: 1
xattack <- plays(x) %>% 
    mutate(SET = set_number) %>% 
    filter(skill == "Attack", 
           team == noi) %>% 
    group_by(set_number) %>% 
    nest

attackP <- function(y){
    tt <- unique(y$SET)
    y %>% mutate(evaluation = case_when(evaluation %in% c("Poor, easily dug") ~ "Negativa",
                                        evaluation %in% c("Positive, good attack",
                                                          "Blocked for reattack") ~ "Positiva",
                                        TRUE ~ evaluation)) %>% 
        ggplot(aes(start_coordinate_x, start_coordinate_y,
                   xend = end_coordinate_x, yend = end_coordinate_y, colour = evaluation)) +
        geom_segment(arrow = arrow(length = unit(2, "mm"), type = "closed", angle = 20)) +
        scale_colour_manual(values = c(`Winning attack` = "green3", 
                                       Error = "firebrick", 
                                       Negativa = "bisque",
                                       Positiva = "aquamarine"),
                            name = "Evaluation") +
    ggcourt(labels = c("", "")) +
        labs(title = paste0("Set ", tt))
}

xattack <- xattack %>% 
    mutate(plot = map(data, attackP))

patchwork::wrap_plots(xattack$plot, ncol = 3) +
    patchwork::plot_layout(guides = 'collect')
```

### Freeball

```{r}
#| results: asis

aF <- vr_freeball(x, by = "set", team_select = noi)
glue::glue("Su un totale di {sum(pointsN$Tot...17) + sum(pointsN$Tot...22)} palle mandate nell'altro campo {sum(pointsN$Tot...22)} sono state freeballs ({round(sum(pointsN$Tot...22) / (sum(pointsN$Tot...17) + sum(pointsN$Tot...22)) *100,1)}%). Commettiamo un errore ogni {round(sum(aF$Tot) / sum(aF$Err), 1)} freeballs")
```

```{r}
t10 %>% 
    gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```



## Ricezione

```{r}
# RECEPTION
t6 <- vr_reception(x, by = "set", team_select = noi)

t6 %>% 
    gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```

## Servizio

```{r}
# SERVE
t4 <- vr_serve(x, by = "set", team_select = noi)

t4 %>% 
   gt(id = "third") %>%
    cols_align(
    align = "center") %>% 
    tab_options(table.width = px(350)) %>% 
    opt_css(
    css = "
    #third .gt_col_heading {
      padding: 2px 3px;
      font-size: 14px;
    }
    #third .gt_row {
      padding: 2px 3px;
      font-size: 12px;
    }
    #third .gt_col_heading {
      text-align: center !important;
    }
    ")%>% 
    gtExtras::gt_theme_nytimes()
```

```{r}
#| fig-width: 10
#| fig-asp: 1
xserves <- plays(x) %>% 
    mutate(SET = set_number) %>% 
    filter(skill == "Serve", 
           serving_team == noi) %>% 
    group_by(set_number) %>% 
    nest

serveP <- function(y){
    tt <- unique(y$SET)
    y %>% mutate(evaluation = case_when(evaluation %in% c("Negative, opponent free attack") ~ "Negativa",
                                        evaluation %in% c("OK, no first tempo possible",
                                                          "Positive, no attack",
                                                          "Positive, opponent some attack") ~ "Positiva",
                                        TRUE ~ evaluation)) %>% 
        ggplot(aes(start_coordinate_x, start_coordinate_y,
                   xend = end_coordinate_x, yend = end_coordinate_y, colour = evaluation)) +
        geom_segment(arrow = arrow(length = unit(2, "mm"), type = "closed", angle = 20)) +
        scale_colour_manual(values = c(Ace = "green3", 
                                       Error = "firebrick", 
                                       Negativa = "bisque",
                                       Positiva = "aquamarine"),
                            name = "Evaluation") +
    ggcourt(labels = c("", "")) +
        labs(title = paste0("Set ", tt))
}

xserves <- xserves %>% 
    mutate(plot = map(data, serveP))

patchwork::wrap_plots(xserves$plot, ncol = 3) +
    patchwork::plot_layout(guides = 'collect')
```





## Zona di attacco/battuta
::: {.g-col-9}
```{r}
#| fig-asp: .5
#| fig-width: 30
range02 <- function(x) {(x - min(x, na.rm=TRUE)) / diff(range(x, na.rm=TRUE))}
## calculate attack frequency by zone, per team
attack_rate <- plays(x) %>%
    dplyr::filter(skill == "Attack") %>%
    group_by(team, start_zone) %>%
    dplyr::summarize(n_attacks = n()) %>%
    mutate(rate = n_attacks/sum(n_attacks)) %>%
    ungroup
## add x, y coordinates associated with the zones
attack_rate <- cbind(attack_rate, dv_xy(attack_rate$start_zone, end = "lower"))
## for team 2, these need to be on the top half of the diagram
tm2i <- attack_rate$team == teams(x)[2]
attack_rate[tm2i, c("x", "y")] <- dv_flip_xy(attack_rate[tm2i, c("x", "y")])
p1 <- attack_rate %>%
    mutate(rate = range02(rate)) %>%
    ggplot(aes(x, y, fill = rate)) +
    geom_tile() +
    ggcourt(labels = "") +
    scale_fill_gradient2(low = "white",
                         high = "black",
                         name = "Scala IntensitÃ ") +
     labs(title = "Attacchi",
         subtitle = "Zona di partenza") +
    annotate(geom = "text", x = 2, y = 0, label = ifelse(teams(x)[1] == noi, "Noi", "Loro"), size = 15) +
    annotate(geom = "text", x = 2, y = 7, label = ifelse(teams(x)[2] == noi, "Noi", "Loro"), size = 15) +
    theme(plot.title = element_text(hjust = .5, size = 40),
          plot.subtitle = element_text(hjust = .5, size = 30))
## calculate attack frequency by zone, per team
attack_rate <- plays(x) %>%
    dplyr::filter(skill == "Attack") %>%
    group_by(team, end_zone) %>%
    dplyr::summarize(n_attacks = n()) %>%
    mutate(rate = n_attacks/sum(n_attacks)) %>%
    drop_na() %>%
    ungroup
## add x, y coordinates associated with the zones
attack_rate <- cbind(attack_rate, dv_xy(attack_rate$end_zone, end = "lower"))
## for team 2, these need to be on the top half of the diagram
tm2i <- attack_rate$team == teams(x)[2]
attack_rate[tm2i, c("x", "y")] <- dv_flip_xy(attack_rate[tm2i, c("x", "y")])
attack_rate <- attack_rate %>%
    mutate(x2 = case_when(x == 1 ~ 3,
                          x == 2 ~ 2,
                          x == 3 ~1),
           y2 = case_when(y == 1 ~ 6,
                          y == 2 ~ 5,
                          y == 3 ~ 4,
                          y == 4 ~ 3,
                          y == 5 ~ 2,
                          y == 6~ 1))

p2 <-  attack_rate %>%
    mutate(rate = range02(rate)) %>%
    ggplot(aes(x, y, fill = rate)) +
    geom_tile() +
    ggcourt(labels = "") +
    scale_fill_gradient2(low = "white",
                         high = "black",
                         name = "Scala IntensitÃ ") +
     labs(title = "Attacchi",
         subtitle = "Zona di arrivo") +
    annotate(geom = "text", x = 2, y = 0, label = ifelse(teams(x)[1] == noi, "Noi", "Loro"), size = 15) +
    annotate(geom = "text", x = 2, y = 7, label = ifelse(teams(x)[2] == noi, "Noi", "Loro"), size = 15) +
    theme(plot.title = element_text(hjust = .5, size = 40),
          plot.subtitle = element_text(hjust = .5, size = 30))
## take just the serves from the play-by-play data
serve_rate <- plays(x) %>%
    filter(skill == "Serve") %>%
    group_by(team, end_zone) %>%
    dplyr::summarize(n_serve = n()) %>%
    mutate(rate = n_serve/sum(n_serve)) %>%
    drop_na() %>%
    ungroup
## add x, y coordinates associated with the zones
serve_rate <- cbind(serve_rate, dv_xy(serve_rate$end_zone, end = "lower"))
## for team 2, these need to be on the top half of the diagram
tm2i <- serve_rate$team == teams(x)[1]
serve_rate[tm2i, c("x", "y")] <- dv_flip_xy(serve_rate[tm2i, c("x", "y")])
serve_rate <- serve_rate %>%
    mutate(x2 = case_when(x == 1 ~ 3,
                          x == 2 ~ 2,
                          x == 3 ~1),
           y2 = case_when(y == 1 ~ 6,
                          y == 2 ~ 5,
                          y == 3 ~ 4,
                          y == 4 ~ 3,
                          y == 5 ~ 2,
                          y == 6~ 1))
p3 <-  serve_rate %>%
    mutate(rate = range02(rate)) %>%
    ggplot(aes(x, y, fill = rate)) +
    geom_tile() +
    ggcourt(labels = "") +
    scale_fill_gradient2(low = "white",
                         high = "black",
                         name = "Scala IntensitÃ ") +
    labs(title = "Battute",
         subtitle = "Zona di arrivo") +
    annotate(geom = "text", x = 2, y = 0, label = ifelse(teams(x)[1] == noi, "Noi", "Loro"), size = 15) +
    annotate(geom = "text", x = 2, y = 7, label = ifelse(teams(x)[2] == noi, "Noi", "Loro"), size = 15) +
    theme(plot.title = element_text(hjust = .5, size = 40),
          plot.subtitle = element_text(hjust = .5, size = 30))
library(patchwork)
p1 + p2 + p3 +
    plot_layout(guides = 'collect')
```
:::


## Valutazioni generali {{< fa gauge-simple-high size=normalsize >}}

```{r}
suppressPackageStartupMessages(library(tidyverse))

df <- tribble(
    ~variable, ~percentage,
    "Gioco di squadra", 0.7,
    "Contenimento degli errori", 0.3,
    "AbilitÃ  degli avversari", 0.8,
    "Soddisfazione\ndegli allenatori", 0.8,
    "Voto", 0.8)
    

df <- df %>% 
    mutate(group = ifelse(percentage <0.6, "red",
                          ifelse(percentage>=0.6 & percentage<0.8, "orange","green")),
           label = paste0(percentage * 100, "%"),
           title = factor(variable))

ggplot(df, aes(fill = group, ymax = percentage, ymin = 0, xmax = 2, xmin = 1)) +
 geom_rect(aes(ymax=1, ymin=0, xmax=2, xmin=1), fill ="#ece8bd") +
 geom_rect() + 
 coord_polar(theta = "y",start=-pi/2) + xlim(c(0, 2)) + ylim(c(0,2)) +
 geom_text(aes(x = 0, y = 0, label = label, colour=group), size=6.5) +
 # geom_text(aes(x=1.5, y=1.5, label=title), size=4.2) + 
 facet_wrap(~title, ncol = 3) +
 theme_void() +
 scale_fill_manual(values = c("red"="#C9146C", "orange"="#DA9112", "green"="#129188")) +
 scale_colour_manual(values = c("red"="#C9146C", "orange"="#DA9112", "green"="#129188")) +
 theme(strip.background = element_blank(),
       strip.text.x = element_text(size = 13)) +
 guides(fill="none") +
 guides(colour="none")
```

## Scout

1. [Semplificato](semplificato.pdf)
1. [Avanzato](avanzato.pdf)


## Video della Partita {{< fa video size=normalsize >}}

1. [Partita](https://youtu.be/Ca0uDdWOALg)

{{< video https://www.youtube.com/embed/Ca0uDdWOALg >}}

## Foto della partita {{< fa camera size=normalsize >}}

1. ![](image.jpg)